package net.iceyleagons.icicle.database;

import com.google.common.reflect.TypeToken;
import net.iceyleagons.icicle.core.annotations.Internal;
import net.iceyleagons.icicle.database.annotations.AutoGenerated;
import net.iceyleagons.icicle.database.annotations.Datastore;
import net.iceyleagons.icicle.database.annotations.Id;
import org.jetbrains.annotations.Nullable;

import java.lang.reflect.Field;
import java.lang.reflect.ParameterizedType;
import java.lang.reflect.Type;
import java.util.Arrays;

@Internal
public final class DatabaseUtils {


    @Nullable
    public static Field getIdField(Object object) {
        return Arrays.stream(object.getClass().getDeclaredFields())
                .filter(f -> f.isAnnotationPresent(Id.class))
                .findFirst().orElse(null);
    }

    public static String getDatastoreName(Class<?> objectType) {
        return objectType.isAnnotationPresent(Datastore.class) ? objectType.getAnnotation(Datastore.class).value() : objectType.getName();
    }

    public static boolean shouldAutoGenerate(Field field) {
        return field.isAnnotationPresent(AutoGenerated.class);
    }
}
